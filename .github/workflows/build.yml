name: Rust Build

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive-name: bili-dl_linux_x86_64
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            archive-name: bili-dl_windows_x86_64
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Build archive
        shell: bash
        run: |
          mkdir -p archive
          cd archive
          mkdir ${{ matrix.archive-name }}
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cp "../target/${{ matrix.target }}/release/bili-dl.exe" ./${{ matrix.archive-name }}
          else
            cp "../target/${{ matrix.target }}/release/bili-dl" ./${{ matrix.archive-name }}
          fi

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: archive/${{ matrix.archive-name }}

